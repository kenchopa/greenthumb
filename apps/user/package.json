{
  "name": "@greenthumb/user",
  "description": "Contains a microservice for the user domain.",
  "main": "src/index.ts",
  "scripts": {
    "prebuild": "npm run clean",
    "build": "tsc",
    "clean": "rimraf dist coverage",
    "debug": "nodemon --watch src --ext js,ts,json --watch .env --delay 80ms --exec 'tsc && NODE_ENV=development node --inspect=0.0.0.0:9229 dist/index.js'",
    "dev": "nodemon --watch .env --delay 80ms --watch src --ext js,ts,json --exec 'NODE_ENV=development ts-node src/index.ts'",
    "docker:build": "cd ./docker/development && docker compose build",
    "docker:down": "cd ./docker/development && docker compose down",
    "docker:up": "cd  ./docker/development && docker compose up",
    "docker:connect": "docker exec -it user /bin/bash",
    "prestart": "npm run build",
    "start": "NODE_ENV=production node dist/index.js",
    "test": "NODE_ENV=test TYPEORM_LOGGING=false jest --no-coverage --runInBand",
    "test:coverage": "NODE_ENV=test TYPEORM_LOGGING=false jest",
    "test:e2e": "NODE_ENV=bla TYPEORM_LOGGING=false jest --no-coverage --testRegex '.*.e2e.test.ts' --testPathIgnorePatterns=[] --runInBand --detectOpenHandles",
    "lint": "eslint src/**/* --ext js,ts",
    "lint:fix": "npm run lint -- --fix",
    "token:admin": "NODE_ENV=development ts-node src/commands/generateToken.command.ts admin",
    "token:anonymous": "NODE_ENV=development ts-node src/commands/generateToken.command.ts anonymous",
    "token:system": "NODE_ENV=development ts-node src/commands/generateToken.command.ts system",
    "token:operator": "NODE_ENV=development ts-node src/commands/generateToken.command.ts operator",
    "token:user": "NODE_ENV=development ts-node src/commands/generateToken.command.ts user",
    "entity:create": "NODE_ENV=development ts-node ./node_modules/typeorm/cli entity:create -d src/database/migration.config.ts",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli -d ./src/database/migration.config.ts",
    "migration:create": "cross-var ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli migration:create src/migrations/$npm_config_name",
    "migration:generate": "cross-var npm run typeorm -- migration:generate ./src/migrations/$npm_config_name",
    "migration:run": "npm run build && npm run typeorm -- migration:run",
    "migration:revert": "npm run typeorm -- migration:revert",
    "schema:drop": "NODE_ENV=development ts-node ./node_modules/typeorm/cli schema:drop -d src/database/migration.config.ts"
  },
  "dependencies": {
    "@greenthumb/auth": "workspace:*",
    "@greenthumb/context": "workspace:^",
    "@greenthumb/core": "workspace:*",
    "@greenthumb/errors": "workspace:^",
    "@greenthumb/koa": "workspace:^",
    "@greenthumb/logger": "workspace:*",
    "@greenthumb/tracer": "workspace:*",
    "axios": "^1.2.5",
    "bcrypt": "^5.1.0",
    "dotenv": "^16.0.3",
    "joi": "^17.7.0",
    "jsonwebtoken": "^9.0.0",
    "koa": "^2.14.1",
    "moment": "^2.29.4",
    "opentracing": "^0.14.7",
    "pg": "^8.8.0",
    "reflect-metadata": "^0.1.13",
    "typeorm": "^0.3.11"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.0",
    "@types/jsonwebtoken": "^9.0.1",
    "@types/koa": "^2.13.5",
    "cross-var": "^1.1.0",
    "rimraf": "^4.1.2"
  }
}
